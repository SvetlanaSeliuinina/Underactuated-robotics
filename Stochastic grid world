
n = 10;
N = n^2;
[y,x] = meshgrid(1:n,1:n);
S = [x(:)';y(:)'];
A = [1,2,3,4];

% Цена премещения
C = sparse(N,4);
% Препятствия
for i = 1:n
    for j = 1:n
        % Цена перемещения по препятствиям 50
        if all([i,j] == [5,6]) || all([i,j] == [6,6]) || all([i,j] == [5,7]) || all([i,j] == [6,7])
            C((j-1)*n+i,:) = 50*ones(1,4);
        else
            % В остальных местах цена 1
            C((j-1)*n+i,:) = ones(1,4);
        end
    end
end
            
% Если достигли цели, цена 0
C(2*n+3,:) = zeros(1,4); 


%Матрицы перемещения
T{1} = sparse(N,N);
T{2} = sparse(N,N);
T{3} = sparse(N,N);
T{4} = sparse(N,N);

%Вероятность перемещения
p_correct = 0.75;
p_wrong = (1-p_correct)/3;

% Движение вверх
for i = 1:N   
    if any(i == [(N-n+1):N]) 
        % Верхняя граница
        T{1}(i,i) = 1;
    elseif (mod(i,n) == 0)
        % Правая граница
        T{1}(i,i+n) = 1;
    elseif any(i == [1:n])
        % Нижняя граница
        T{1}(i,i+n) = 1;
    elseif (mod(i,n) == 1)
        % Левая граница
        T{1}(i,i+n) = 1;        
    else
    % Не граница
    T{1}(i,i-n) = p_wrong;
    T{1}(i,i+1) = p_wrong;
    T{1}(i,i+n) = p_correct;
    T{1}(i,i-1) = p_wrong;
    end
end

% Движение направо
for i = 1:N 
    if (mod(i,n) == 0) 
        % Правая граница
        T{2}(i,i) = 1;
    elseif any(i == [(N-n+1):N])
        % Верхняя граница
        T{2}(i,i+1) = 1;
    elseif any(i == [1:n]) 
        % Нижняя граница
        T{2}(i,i+1) = 1;
    elseif (mod(i,n) == 1)
        % Левая граница
        T{2}(i,i+1) = 1;        
    else
    % Не граница
    T{2}(i,i-n) = p_wrong;
    T{2}(i,i+1) = p_correct;
    T{2}(i,i+n) = p_wrong;
    T{2}(i,i-1) = p_wrong;
    end
end

% Движение вниз
for i = 1:N 
    if any(i == [1:n]) 
        % Нижняя граница
        T{3}(i,i) = 1;
    elseif (mod(i,n) == 0)
        % Правая граница
        T{3}(i,i-n) = 1;
    elseif any(i == [(N-n+1):N]) 
        % Верхняя граница
        T{3}(i,i-n) = 1;
    elseif (mod(i,n) == 1)
        % Левая граница
        T{3}(i,i-n) = 1;        
    else
    % Не граница
    T{3}(i,i-n) = p_correct;
    T{3}(i,i+1) = p_wrong;
    T{3}(i,i+n) = p_wrong;
    T{3}(i,i-1) = p_wrong;
    end
end

% Движение налево
for i = 1:N 
    if (mod(i,n) == 1)
        % Левая граница
        T{4}(i,i) = 1;
    elseif (mod(i,n) == 0)
        % Правая граница
        T{4}(i,i-1) = 1;
    elseif any(i == [1:n]) 
        % Нижняя граница
        T{4}(i,i-1) = 1;
    elseif any(i == [(N-n+1):N]) 
        % Верхняя граница
        T{4}(i,i-1) = 1;        
    else
    % Не граница
    T{4}(i,i-n) = p_wrong;
    T{4}(i,i+1) = p_wrong;
    T{4}(i,i+n) = p_wrong;
    T{4}(i,i-1) = p_correct;
    end
end

% Если цель достигнута, оставаться там
for i = 1:N
    T{1}(2*n+3,i) = 0;
    T{2}(2*n+3,i) = 0;
    T{3}(2*n+3,i) = 0;
    T{4}(2*n+3,i) = 0;
end
    
T{1}(2*n+3,2*n+3) = 1;
T{2}(2*n+3,2*n+3) = 1;
T{3}(2*n+3,2*n+3) = 1;
T{4}(2*n+3,2*n+3) = 1;
